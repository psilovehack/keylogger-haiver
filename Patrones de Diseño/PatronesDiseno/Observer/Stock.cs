///////////////////////////////////////////////////////////
//  Stock.cs
//  Implementation of the Class Stock
//  Generated by Enterprise Architect
//  Created on:      16-sep-2009 15:04:47
//  Original author: nbortolotti
///////////////////////////////////////////////////////////




using System.Collections;
namespace Observer {
	public abstract class Stock {

        private int precio;

        public int Precio
        {
            get { return precio; }
            set 
            { 
                precio = value;
                Notificar();
            }
        }
        private string producto;

        public string Producto
        {
            get { return producto; }
            set { producto = value; }
        }
        private ArrayList inversores = new ArrayList();

		public Stock(string pProducto, int pPrecio)
        {
            this.producto = pProducto;
            this.precio = pPrecio;
		}

		~Stock(){

		}

		public virtual void Dispose(){

		}

        public void Attach(Iversor i)
        {
            inversores.Add(i);
        }

        public void Detach(Iversor i)
        {
            inversores.Remove(i);
        }
        public void Notificar()
        {
            foreach (Iversor i in inversores)
            {
                i.Actualizar(this);
            }
        }


	}//end Stock

}//end namespace Observer